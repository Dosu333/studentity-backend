version: "3.7"

services:
  db:
    image: postgres:14.1-alpine
    volumes:
      - postgres_rms_data:/var/lib/postgresql/data
    env_file:
      - ./.env
    ports:
      - "5432:5432"
    healthcheck:
      test:  [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 5

  api: &api
    build:
      context: .
      dockerfile: docker/dev/Dockerfile
    image: profmcdan/api-api
    command: python manage.py runserver 0.0.0.0:10007
    volumes:
      - ./app:/app
    ports:
      - "10007:10007"
    env_file:
      - ./.env
    restart: unless-stopped
    depends_on:
      - redis
      - db

  redis:
    image: bitnami/redis:latest
    env_file:
      - ./.env
    ports:
      - "6379:6379"
#    volumes:
#      - ./redis-data:/bitnami/redis/data

  celery:
    <<: *api
    command: celery -A core worker --loglevel=info --logfile=logs/celery.log
    ports: [ ]
    volumes:
      - ./app:/app
    env_file:
      - ./.env
    depends_on:
      - redis
      - api

  celery-beat:
    <<: *api
    command: celery -A core beat -l info
    ports: [ ]
    volumes:
      - ./app:/app
    env_file:
      - ./.env
    depends_on:
      - redis
      - celery

  dashboard:
    <<: *api
    command: celery --broker=${REDIS_URL} flower --port=5555
    ports:
      - "5555:5555"
    env_file:
      - ./.env
    depends_on:
      - api
      - redis
      - celery

  locust-master:
    image: locustio/locust
    ports:
      - "8089:8089"
    volumes:
      - ./app:/app
    command: -f /app/locustfile.py --master -H http://localhost:8000
    depends_on:
      - api

  locust-worker:
    image: locustio/locust
    volumes:
      - ./app:/app/
    command: -f /app/locustfile.py --worker --master-host locust-master
    depends_on:
      - api

volumes:
  postgres_rms_data: ~